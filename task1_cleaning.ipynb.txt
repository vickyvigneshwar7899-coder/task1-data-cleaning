{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "4850e162-b359-4ca4-814e-bf0392679f4a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: pandas in c:\\users\\vigneshwar\\anaconda3\\lib\\site-packages (2.2.2)\n",
      "Requirement already satisfied: numpy>=1.26.0 in c:\\users\\vigneshwar\\anaconda3\\lib\\site-packages (from pandas) (1.26.4)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in c:\\users\\vigneshwar\\anaconda3\\lib\\site-packages (from pandas) (2.9.0.post0)\n",
      "Requirement already satisfied: pytz>=2020.1 in c:\\users\\vigneshwar\\anaconda3\\lib\\site-packages (from pandas) (2024.1)\n",
      "Requirement already satisfied: tzdata>=2022.7 in c:\\users\\vigneshwar\\anaconda3\\lib\\site-packages (from pandas) (2023.3)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\vigneshwar\\anaconda3\\lib\\site-packages (from python-dateutil>=2.8.2->pandas) (1.16.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install pandas\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "be772270-90cc-4aea-b9f2-740ca1b5e849",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      PatientId  AppointmentID Gender          ScheduledDay  \\\n",
      "0  2.987250e+13        5642903      F  2016-04-29T18:38:08Z   \n",
      "1  5.589978e+14        5642503      M  2016-04-29T16:08:27Z   \n",
      "2  4.262962e+12        5642549      F  2016-04-29T16:19:04Z   \n",
      "3  8.679512e+11        5642828      F  2016-04-29T17:29:31Z   \n",
      "4  8.841186e+12        5642494      F  2016-04-29T16:07:23Z   \n",
      "\n",
      "         AppointmentDay  Age      Neighbourhood  Scholarship  Hipertension  \\\n",
      "0  2016-04-29T00:00:00Z   62    JARDIM DA PENHA            0             1   \n",
      "1  2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0             0   \n",
      "2  2016-04-29T00:00:00Z   62      MATA DA PRAIA            0             0   \n",
      "3  2016-04-29T00:00:00Z    8  PONTAL DE CAMBURI            0             0   \n",
      "4  2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0             1   \n",
      "\n",
      "   Diabetes  Alcoholism  Handcap  SMS_received No-show  \n",
      "0         0           0        0             0      No  \n",
      "1         0           0        0             0      No  \n",
      "2         0           0        0             0      No  \n",
      "3         0           0        0             0      No  \n",
      "4         1           0        0             0      No  \n",
      "Initial Data Shape: (110527, 14)\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 110527 entries, 0 to 110526\n",
      "Data columns (total 14 columns):\n",
      " #   Column          Non-Null Count   Dtype  \n",
      "---  ------          --------------   -----  \n",
      " 0   PatientId       110527 non-null  float64\n",
      " 1   AppointmentID   110527 non-null  int64  \n",
      " 2   Gender          110527 non-null  object \n",
      " 3   ScheduledDay    110527 non-null  object \n",
      " 4   AppointmentDay  110527 non-null  object \n",
      " 5   Age             110527 non-null  int64  \n",
      " 6   Neighbourhood   110527 non-null  object \n",
      " 7   Scholarship     110527 non-null  int64  \n",
      " 8   Hipertension    110527 non-null  int64  \n",
      " 9   Diabetes        110527 non-null  int64  \n",
      " 10  Alcoholism      110527 non-null  int64  \n",
      " 11  Handcap         110527 non-null  int64  \n",
      " 12  SMS_received    110527 non-null  int64  \n",
      " 13  No-show         110527 non-null  object \n",
      "dtypes: float64(1), int64(8), object(5)\n",
      "memory usage: 11.8+ MB\n",
      "None\n",
      "      PatientId  AppointmentID Gender          ScheduledDay  \\\n",
      "0  2.987250e+13        5642903      F  2016-04-29T18:38:08Z   \n",
      "1  5.589978e+14        5642503      M  2016-04-29T16:08:27Z   \n",
      "2  4.262962e+12        5642549      F  2016-04-29T16:19:04Z   \n",
      "3  8.679512e+11        5642828      F  2016-04-29T17:29:31Z   \n",
      "4  8.841186e+12        5642494      F  2016-04-29T16:07:23Z   \n",
      "\n",
      "         AppointmentDay  Age      Neighbourhood  Scholarship  Hipertension  \\\n",
      "0  2016-04-29T00:00:00Z   62    JARDIM DA PENHA            0             1   \n",
      "1  2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0             0   \n",
      "2  2016-04-29T00:00:00Z   62      MATA DA PRAIA            0             0   \n",
      "3  2016-04-29T00:00:00Z    8  PONTAL DE CAMBURI            0             0   \n",
      "4  2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0             1   \n",
      "\n",
      "   Diabetes  Alcoholism  Handcap  SMS_received No-show  \n",
      "0         0           0        0             0      No  \n",
      "1         0           0        0             0      No  \n",
      "2         0           0        0             0      No  \n",
      "3         0           0        0             0      No  \n",
      "4         1           0        0             0      No  \n",
      "\n",
      "Missing Values:\n",
      " patientid         0\n",
      "appointmentid     0\n",
      "gender            0\n",
      "scheduledday      0\n",
      "appointmentday    0\n",
      "age               0\n",
      "neighbourhood     0\n",
      "scholarship       0\n",
      "hipertension      0\n",
      "diabetes          0\n",
      "alcoholism        0\n",
      "handcap           0\n",
      "sms_received      0\n",
      "no_show           0\n",
      "dtype: int64\n",
      "\n",
      "Updated Data Types:\n",
      " gender                         object\n",
      "scheduledday      datetime64[ns, UTC]\n",
      "appointmentday    datetime64[ns, UTC]\n",
      "age                             int64\n",
      "neighbourhood                  object\n",
      "scholarship                     int64\n",
      "hipertension                    int64\n",
      "diabetes                        int64\n",
      "alcoholism                      int64\n",
      "handcap                         int64\n",
      "sms_received                    int64\n",
      "no_show                        object\n",
      "dtype: object\n",
      "\n",
      "Data cleaning complete. Cleaned file saved as 'cleaned_medical_appointments.csv'\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Step 1: Load the dataset\n",
    "import zipfile\n",
    "import pandas as pd\n",
    "\n",
    "# Step 1: Extract the ZIP\n",
    "zip_path = r\"C:\\Users\\vigneshwar\\Downloads\\KaggleV2-May-2016.csv (1).zip\"\n",
    "extract_to = r\"C:\\Users\\vigneshwar\\Downloads\\medical_data\"\n",
    "\n",
    "with zipfile.ZipFile(zip_path, 'r') as zip_ref:\n",
    "    zip_ref.extractall(extract_to)\n",
    "\n",
    "# Step 2: Choose ONE file to read from the extracted folder\n",
    "csv_path = r\"C:\\Users\\vigneshwar\\Downloads\\medical_data\\KaggleV2-May-2016.csv\"\n",
    "df = pd.read_csv(csv_path)\n",
    "\n",
    "# Step 3: Preview the data\n",
    "print(df.head())\n",
    "\n",
    "# Step 2: Basic Info Check\n",
    "print(\"Initial Data Shape:\", df.shape)\n",
    "print(df.info())\n",
    "print(df.head())\n",
    "\n",
    "# Step 3: Rename Columns (make lowercase, replace spaces)\n",
    "df.columns = df.columns.str.lower().str.strip().str.replace('-', '_').str.replace(' ', '_')\n",
    "\n",
    "# Step 4: Remove Duplicates\n",
    "df.drop_duplicates(inplace=True)\n",
    "\n",
    "# Step 5: Check and Handle Missing Values\n",
    "missing = df.isnull().sum()\n",
    "print(\"\\nMissing Values:\\n\", missing)\n",
    "\n",
    "# Step 6: Convert Dates to datetime format\n",
    "df['scheduledday'] = pd.to_datetime(df['scheduledday'])\n",
    "df['appointmentday'] = pd.to_datetime(df['appointmentday'])\n",
    "\n",
    "# Step 7: Standardize Text Columns\n",
    "df['gender'] = df['gender'].str.upper().str.strip()\n",
    "df['no_show'] = df['no_show'].str.upper().str.strip()\n",
    "\n",
    "# Step 8: Fix invalid data in 'age' column\n",
    "# Remove rows with negative age\n",
    "df = df[df['age'] >= 0]\n",
    "\n",
    "# Step 9: Drop irrelevant columns\n",
    "df.drop(['patientid', 'appointmentid'], axis=1, inplace=True)\n",
    "\n",
    "# Step 10: Check data types\n",
    "print(\"\\nUpdated Data Types:\\n\", df.dtypes)\n",
    "\n",
    "# Step 11: Export the cleaned data\n",
    "df.to_csv(\"cleaned_medical_appointments.csv\", index=False)\n",
    "print(\"\\nData cleaning complete. Cleaned file saved as 'cleaned_medical_appointments.csv'\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3f80607f-7cc8-4cb0-83cd-5fe0acec2a2a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "bdae22a3-4823-440f-9902-2f9937613c61",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "C:\\Users\\vigneshwar\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "print(os.getcwd())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bb279500-1672-4bb6-9a31-7100ec2b0a8a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
